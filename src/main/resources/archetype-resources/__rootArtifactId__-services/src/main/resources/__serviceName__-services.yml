#set ($d = "$")
# Learn: https://docs.spring.io/spring-boot/docs/current/reference/html/howto-properties-and-configuration.html#howto-use-yaml-for-external-properties

server:
  port: ${servicePort}
info:
  build:
    version:  "@project.version@"
    artifact: "@project.artifactId@"
    name: "@project.name@"
    description: "@project.description@"
#Properties to customize Jackson ObjectMapper
spring:
  jackson:
    serialization-inclusion: NON_EMPTY
    serialization:
      INDENT_OUTPUT: true
  cloud:
    bus:
      enabled: false
########################################
# REDIS Ascent Custom Cache Properties
# Default Expiration and For Each Bucket
########################################
ascent:
  cache:
    defaultExpires: 86400 # (Seconds)
  ############################################################################
  #Property configuration to enable or disable JWT security for service calls
  ############################################################################
  security:
    jwt:
      enabled: false
      filter-process-url: /${artifactId}/v?/**
  swagger:
    title: ${serviceName} v1 API Documentation
    description: API Error Keys <a href="swagger/error-keys.html">error keys</a>
    groupName: ${artifactId}-v1
    version: ${d}{info.build.version}
    securePaths: /${artifactId}.*
####################################### 
#   Logging Level for packages
#######################################
logging:
  level:
    gov:
      va:
        ascent: INFO
    org:
      springframework:
        cloud.sleuth.log: INFO
        cloud.sleuth: INFO
        cloud.sleuth.instrument.web: INFO
        security: INFO
        ws: INFO
        cache: INFO
      apache:
        http:
          impl.client: INFO
security:
  user:
    name: ${d}{ascent.security.username:admin}
    password: ${d}{ascent.security.password:default}
management.health.rabbit.enabled: false
management.health.redis.enabled: false
#######################################
#sanitize properties for keys when using /configprops.
#######################################
endpoints:
  configprops:
    keys-to-sanitize: 'enabled, password'
#######################################
#  hystrix command overrides
#######################################
hystrix:
  shareSecurityContext: true
  command:
    default:
      metrics:
        rollingStats:
          # This property sets the duration of the statistical rolling window, in milliseconds.
          # This is how long Hystrix keeps metrics for the circuit breaker to use and for publishing
          # Default Value: 10000
          timeInMilliseconds: 20000
        # This property sets the time to wait, in milliseconds, between allowing health snapshots to be taken that calculate
        # success and error percentages and affect circuit breaker status.
        # Default Value: 500
        healthSnapshot:
          intervalInMilliseconds: 1000
      circuitBreaker:
        # This property sets the amount of time, after tripping the circuit, to reject requests
        # before allowing attempts again to determine if the circuit should again be closed.
        # Default Value: 5000
        sleepWindowInMilliseconds: 10000
        # This property sets the minimum number of requests in a rolling window that will trip the circuit.
        # Default Value: 20
        requestVolumeThreshold: 4
      execution:
        isolation:
          thread:
            # This property sets the time in milliseconds after which the caller will observe a timeout and walk away from the
            # command execution. Hystrix marks the HystrixCommand as a TIMEOUT, and performs fallback logic. Note that there
            # is configuration for turning off timeouts per-command, if that is desired (see command.timeout.enabled).
            # IMPORTANT NOTE: THIS TIMEOUT VALUE MUST BE GREATER THAN ANY SERVICE TIMEOUT TO AVOID ERRORS
            # Default Value: 1000
            timeoutInMilliseconds: 20000

#######################################
# Sleuth configuration
# To skip specific patterns being exported, added few more customs on top of default skip pattern
# see org.springframework.cloud.sleuth.instrument.web.TraceFilter.DEFAULT_SKIP_PATTERN
#######################################
spring.sleuth.web.skipPattern: (/api/.*/webjars.*|/api/.*/v2/api-docs.*|/api/.*/swagger-resources.*|/api/.*/swagger-ui.*|/api-docs.*|/autoconfig|/configprops|/dump|/health|/info|/metrics.*|/mappings|/trace|/swagger.*|.*\\.png|.*\\.css|.*\\.js|.*\\.html|/favicon.ico|/hystrix.stream)
    
---
spring.profiles: default, local-int
spring.profiles.include: remote_client_sims, embedded-redis
ascent:
  cache:
    redis-config:
      host: localhost
      port: 6379
  security:
    jwt:
      secret: vetsgov
spring:
  cache:
    type: redis
  cloud:
    bus:
      enabled: false
  redis:
    host: localhost
    port: 6379
  sleuth:
    stream:
      enabled: false
---